{"version":3,"sources":["components/NavBar/NavBar.module.css","components/Dialogs/Dialogs.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Dialogs/MessageItem/MessageItem.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Profile/MyPosts/Post/Post.module.css","reportWebVitals.ts","Redux/state.ts","components/Header/Header.tsx","components/NavBar/NavBar.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/MessageItem/MessageItem.tsx","components/Dialogs/Dialogs.tsx","components/Music/Music.tsx","components/News/News.tsx","components/Settings/Settings.tsx","App.tsx","render.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","_state","profilePage","posts","id","message","likesCount","newPostText","dialogsPage","dialogs","name","messages","newMessageText","updateNewPostText","newText","this","_onChange","addPost","postMessage","newPost","push","addMessage","MessageValue","newMessage","updateNewMessageText","console","log","subscribe","callback","getState","dispatch","action","type","Header","className","s","header","header_top","to","a","header__image","src","alt","NavBar","nav","list","activeClassName","active","item","Post","props","p","MyPosts","postElement","map","head","value","onChange","e","currentTarget","placeholder","input","onClick","button","posts__item","ProfileInfo","profile","image","description","Profile","DialogItem","path","dialog","MessageItem","messages__item","Dialogs","dialogsElement","d","messageElement","m","dialogs__items","text","butt","Music","content","News","Settings","App","render","bind","rerenderEntireTree","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e6d2a28f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__30a6B\",\"list\":\"NavBar_list__2R5y4\",\"item\":\"NavBar_item__2oWjB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__SBqCl\",\"dialogs__items\":\"Dialogs_dialogs__items__2b9Rw\",\"active\":\"Dialogs_active__3jVbT\",\"messages\":\"Dialogs_messages__1e_sA\",\"messages__item\":\"Dialogs_messages__item__3TGKE\",\"dialog\":\"Dialogs_dialog__3wV3b\",\"input\":\"Dialogs_input__3Aw_9\",\"text\":\"Dialogs_text__1nAwX\",\"butt\":\"Dialogs_butt__cEDsp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__8f4w-\",\"posts__item\":\"MyPosts_posts__item__g4DML\",\"head\":\"MyPosts_head__3DANC\",\"button\":\"MyPosts_button__36rP7\",\"input\":\"MyPosts_input__2sb8K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2z8nB\",\"header_top\":\"Header_header_top__aNdkf\",\"header__image\":\"Header_header__image__360fn\",\"a\":\"Header_a__5oYfA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"ProfileInfo_image__2mHpV\",\"description__item\":\"ProfileInfo_description__item__3pnSs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages__item\":\"MessageItem_messages__item__1jEjC\",\"ava\":\"MessageItem_ava__2TnzV\",\"name\":\"MessageItem_name__1KLyk\",\"message\":\"MessageItem_message__1tqb-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"DialogItem_ava__1acBe\",\"dialog\":\"DialogItem_dialog__2zJqv\",\"active\":\"DialogItem_active__1cWe0\",\"span\":\"DialogItem_span__31oAt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__HzeD4\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export type PostsType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\nexport type ProfilePageType = {\r\n    posts: Array<PostsType>\r\n    newPostText: string\r\n}\r\nexport type MessagesType = {\r\n    id: number\r\n    message: string\r\n}\r\nexport type DialogsType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type DialogsPageType = {\r\n    dialogs: Array<DialogsType>\r\n    messages: Array<MessagesType>\r\n    newMessageText: string\r\n}\r\nexport type RootStateType = {\r\n    profilePage: ProfilePageType\r\n    dialogsPage: DialogsPageType\r\n}\r\nexport type AddPostType = (postMessage: string | undefined) => void\r\nexport type AddMessageType = (MessageValue: any) => void\r\nexport type StoreType = {\r\n    _state: RootStateType\r\n    _onChange: () => void\r\n    updateNewPostText: (newText: string) => void\r\n    addPost: AddPostType\r\n    updateNewMessageText: (newText: string) => void\r\n    addMessage: AddMessageType\r\n    subscribe: (callback: () => void ) => void\r\n    getState: () => RootStateType\r\n    dispatch: () => void\r\n}\r\n\r\n\r\nconst store: StoreType = {\r\n    _state: {\r\n        profilePage: {\r\n            posts: [ {id: 1, message: \"Hi, how are you?\", likesCount: 16},\r\n                {id: 2, message: \"I'm a programmer\", likesCount: 56},\r\n                {id: 3, message: \"It's my first post\", likesCount: 3}, ],\r\n            newPostText: \"\",\r\n        },\r\n        dialogsPage: {\r\n            dialogs: [\r\n                {name: \"Dimych\", id: 1 },\r\n                {name: \"Andrey\", id: 2 },\r\n                {name: \"Galina\", id: 3 },\r\n                {name: \"Victor\", id: 4 },\r\n                {name: \"Maxim\", id: 5 },\r\n                {name: \"Sveta\", id: 6 },\r\n            ],\r\n            messages: [\r\n                {id: 1, message:\"Hello\" },\r\n                {id: 2, message:\"Hi\" },\r\n                {id: 3, message:\"You are right?\" },\r\n                {id: 4, message:\"Yes, i am!\" },\r\n            ],\r\n            newMessageText: \"\",\r\n        },\r\n    },\r\n    updateNewPostText(newText:string) {\r\n        this._state.profilePage.newPostText = newText\r\n        this._onChange()\r\n    },\r\n    addPost(postMessage: any) {\r\n        let newPost = { id: 5,  message: postMessage,  likesCount: 0 }\r\n        this._state.profilePage.posts.push(newPost)\r\n        this._state.profilePage.newPostText = \"\"\r\n        this._onChange()\r\n    },\r\n    addMessage(MessageValue: any) {\r\n        let newMessage = { id: 4,  message: MessageValue }\r\n        this._state.dialogsPage.messages.push(newMessage)\r\n        this._state.dialogsPage.newMessageText = \"\"\r\n        this._onChange()\r\n    },\r\n    updateNewMessageText(newText) {\r\n        this._state.dialogsPage.newMessageText = newText\r\n        this._onChange()\r\n    },\r\n    _onChange() {\r\n        console.log(\"hello\")\r\n    },\r\n    subscribe(callback)  {\r\n        this._onChange = callback\r\n    },\r\n    getState() {\r\n      return this._state\r\n    },\r\n\r\n    dispatch(action) {\r\n        if (action.type === \"ADD-POST\") {\r\n            let newPost = { id: 5,  message: postMessage,  likesCount: 0 }\r\n            this._state.profilePage.posts.push(newPost)\r\n            this._state.profilePage.newPostText = \"\"\r\n            this._onChange()\r\n        } else if (action.type === \"UPDATE-NEW-POST-TEXT\") {\r\n            this._state.profilePage.newPostText = newText\r\n            this._onChange()\r\n        }\r\n    }\r\n}\r\n\r\nexport default store\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = () => { \r\n    return (\r\n        <header className={s.header}>\r\n            <div className={s.header_top}>\r\n                <NavLink to='/profile' className={s.a}>\r\n                    <img className={s.header__image}  src='https://www.amic.ru/project/all/architecture-barnaul/images/tild3630-6134-4437-b138-623638326363__medicallogopng32.jpeg' alt='logo' />\r\n                </NavLink>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport s from './NavBar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <ul className={s.list}>\r\n                <NavLink to='/profile' activeClassName={s.active}>\r\n                    <li className={s.item}>Profile</li>\r\n                </NavLink>\r\n                <NavLink to='/dialogs' activeClassName={s.active}>\r\n                    <li className={s.item}>Messages</li>\r\n                </NavLink>\r\n                <NavLink to='/news' activeClassName={s.active}>\r\n                    <li className={s.item}>News</li>\r\n                </NavLink>\r\n                <NavLink to='/music' activeClassName={s.active}>\r\n                    <li className={s.item}>Music</li>\r\n                </NavLink>\r\n                <NavLink to='/settings' activeClassName={s.active}>\r\n                    <li className={s.item}>Settings</li>\r\n                </NavLink>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport p from './Post.module.css';\r\nimport {PostsType} from \"../../../../Redux/state\";\r\n\r\nconst Post = (props: PostsType) => {\r\n    return (\r\n        <div key={props.id} className={p.item}>\r\n            <img src=\"https://northlands.ru/data/media/14/50930ef9c06c1b4f1a3619eaf0b56a96.jpg\" alt='' />\r\n            {props.message}\r\n            <div>\r\n                {props.likesCount} likes\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Post;","import React, {ChangeEvent, createRef} from 'react';\r\nimport Post from './Post/Post';\r\nimport s from './MyPosts.module.css';\r\nimport {AddPostType, PostsType} from \"../../../Redux/state\";\r\n\r\ntype MyPostsPropsType = {\r\n    posts: PostsType[]\r\n    newPostText: string\r\n    updateNewPostText: (newText: string) => void\r\n    addPost: AddPostType\r\n}\r\n\r\n\r\nconst MyPosts = (props: MyPostsPropsType) => {\r\n\r\n    let postElement = props.posts.map(p => <Post id={p.id} message={p.message} likesCount={p.likesCount}/>)\r\n\r\n    let addPost = () => {\r\n\r\n        props.addPost(props.newPostText);\r\n    }\r\n    let onChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n\r\n        props.updateNewPostText(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className={s.posts}>\r\n            <h2 className={s.head}>My post</h2>\r\n            <div>\r\n                <div>\r\n                    <textarea\r\n                        value={ props.newPostText }\r\n                        onChange={ onChange }\r\n                        placeholder=\"What's new?\"\r\n                        className={s.input}/>\r\n                </div>\r\n                <div>\r\n                    <button onClick={addPost} className={s.button}>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div className={s.posts__item}>\r\n                {postElement}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport p from './ProfileInfo.module.css';\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n        <div className={p.profile}>\r\n            <div>\r\n                <img className={p.image}\r\n                     src='https://northlands.ru/data/media/14/50930ef9c06c1b4f1a3619eaf0b56a96.jpg'\r\n                     alt=''/>\r\n            </div>\r\n            <div className={p.description}>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport { AddPostType, PostsType} from \"../../Redux/state\";\r\n\r\ntype ProfilePropsType = {\r\n    posts: PostsType[]\r\n    newPostText: string\r\n    updateNewPostText: (newText: string) => void\r\n    addPost: AddPostType\r\n}\r\n\r\nconst Profile = (props: ProfilePropsType) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo />\r\n            <MyPosts newPostText={props.newPostText}\r\n                     addPost={props.addPost}\r\n                     posts={props.posts}\r\n                     updateNewPostText={props.updateNewPostText}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport s from './DialogItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {DialogsType} from \"../../../Redux/state\";\r\n\r\nconst DialogItem = (props: DialogsType) => {\r\n    let path = '/dialogs/' + props.id\r\n    return (\r\n            <NavLink to={ path } activeClassName={s.active} >\r\n                <div className={s.dialog}>\r\n                    <span>{ props.name }</span>\r\n                </div>\r\n            </NavLink>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './MessageItem.module.css';\r\nimport {MessagesType} from \"../../../Redux/state\";\r\n\r\nconst MessageItem = (props: MessagesType) => {\r\n    return <li className={s.messages__item}>\r\n        <span className={s.name}>{props.id}</span>\r\n        <span className={s.message}>{props.message}</span>\r\n    </li>\r\n}\r\n\r\nexport default MessageItem;","import React, {ChangeEvent} from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport MessageItem from \"./MessageItem/MessageItem\";\r\nimport {AddMessageType, DialogsType, MessagesType} from \"../../Redux/state\";\r\n\r\ntype DialogsPropsType = {\r\n    updateNewMessageText: (newText: string) => void\r\n    addMessage: AddMessageType\r\n    dialogs: Array<DialogsType>\r\n    messages: Array<MessagesType>\r\n    newMessageText: string\r\n}\r\n\r\nconst Dialogs = (props: DialogsPropsType) =>  {\r\n\r\n    let addMessage = () => {\r\n        props.addMessage( props.newMessageText )\r\n    }\r\n    let changeTextMessage = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        props.updateNewMessageText( e.currentTarget.value )\r\n    }\r\n\r\n    let dialogsElement = props.dialogs.map( d => <DialogItem name={d.name} id={d.id} /> )\r\n    let messageElement = props.messages.map( m => <MessageItem id={m.id} message={m.message} /> )\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogs__items}>\r\n                { dialogsElement }\r\n            </div>\r\n            <div className={s.messages}>\r\n                { messageElement }\r\n                <div className={s.input}>\r\n                <textarea value={ props.newMessageText }\r\n                          placeholder=\"Enter your message\"\r\n                          onChange={ changeTextMessage }\r\n                          className={s.text}/>\r\n                    <button onClick={ addMessage } className={s.butt}>Send</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div className={s.content}>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\n\r\n\r\nfunction News() {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News;","import React from 'react';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport NavBar from './components/NavBar/NavBar';\nimport Profile from './components/Profile/Profile';\nimport Dialogs from \"./components/Dialogs/Dialogs\";\nimport Music from \"./components/Music/Music\";\nimport News from \"./components/News/News\";\nimport Settings from \"./components/Settings/Settings\";\nimport store, {StoreType} from \"./Redux/state\";\nimport {Route} from 'react-router-dom';\n\ntype PropsType = {\n    store: StoreType\n}\n\nconst App: React.FC<PropsType> = (props) => {\n\n    return (\n        <div className='app'>\n            <Header/>\n            <div className='app-wrapper'>\n                <NavBar/>\n                <div className='app-wrapper__content'>\n                    <Route path='/profile'\n                           render={() => <Profile updateNewPostText={props.store.updateNewPostText.bind(store)}\n                                                  addPost={props.store.addPost.bind(store)}\n                                                  newPostText={props.store._state.profilePage.newPostText}\n                                                  posts={props.store._state.profilePage.posts}/>}\n                    />\n\n                    <Route path='/dialogs'\n                           render={() => <Dialogs updateNewMessageText={props.store.updateNewMessageText.bind(store)}\n                                                  addMessage={props.store.addMessage.bind(store)}\n                                                  dialogs={props.store._state.dialogsPage.dialogs}\n                                                  newMessageText={props.store._state.dialogsPage.newMessageText}\n                                                  messages={props.store._state.dialogsPage.messages}/>}/>\n                    <Route path='/news' render={() => <News/>}/>\n                    <Route path='/music' render={() => <Music/>}/>\n                    <Route path='/settings' render={() => <Settings/>}/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\nexport default App;","import store from \"./Redux/state\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport React from \"react\";\r\n\r\n\r\nexport const rerenderEntireTree = () => {\r\n    ReactDOM.render(\r\n        <BrowserRouter><App store={store}/></BrowserRouter>\r\n        , document.getElementById('root'));\r\n}","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./Redux/state\";\nimport {rerenderEntireTree} from \"./render\";\n\n\nstore.subscribe(rerenderEntireTree)\nrerenderEntireTree()\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}