{"version":3,"sources":["components/Dialogs/MessageItem/MessageItem.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.scss","components/Dialogs/DialogItem/DialogItem.module.css","common/container.module.css","components/Profile/MyPosts/Post/Post.module.css","reportWebVitals.ts","components/Settings/Settings.tsx","HOC/AuthRedirect.tsx","Redux/users-page/users-reducer.ts","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/MessageItem/MessageItem.tsx","components/common/formsControls/FormsControls.tsx","components/Dialogs/DialogsContainer.tsx","Redux/dialogs-page/dialogs-actions.ts","components/common/paginator/paginator.tsx","assets/img/user.png","components/Users/User.tsx","common/helpers.ts","Redux/app-reducer.ts","api/api.tsx","Redux/users-page/users-actions.ts","components/Users/Users..tsx","assets/svg-loaders/three-dots.svg","components/common/Preloader/Preloader.tsx","components/Users/UsersContainer.tsx","Redux/profile-page/profile-actions.ts","assets/img/new-user.png","components/Profile/ProfileInfo/ProfileData/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileData/ProfileData.tsx","components/Profile/ProfileInfo/ProfileForm/ProfileFormWithFormik.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/ProfileContainer.tsx","Redux/auth-page/auth-actions.ts","components/Login/Login.tsx","components/Header/HeaderContainer.tsx","App.tsx","Redux/profile-page/profile-reducer.ts","Redux/dialogs-page/dialogs-reducer.ts","Redux/auth-page/auth-reducer.ts","Redux/redux-store.ts","index.tsx","components/Users/Users.module.scss","components/Profile/ProfileInfo/ProfileInfo.module.scss","components/Dialogs/Dialogs.module.css","components/Login/Login.module.scss","components/common/paginator/paginator.module.scss"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Settings","mapStateToPropsForRedirect","state","isAuth","auth","AuthRedirect","ActionTypes","Component","connect","restProps","to","DialogItem","props","path","id","activeClassName","s","active","className","dialog","name","MessageItem","messages__item","message","TextArea","Input","InputUse","label","useField","field","meta","htmlFor","style","placeholder","type","touched","error","TextareaUse","MyCheckbox","children","checked","Dialogs","React","memo","dispatch","useDispatch","useSelector","dialogsPage","dialogs","messages","dialogs__items","map","d","m","initialValues","messageText","validationSchema","Yup","max","required","onSubmit","values","action","value","newText","resetForm","formik","handleSubmit","input","butt","compose","Paginator","pageSize","totalItemsCount","onChangePage","currentPage","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginatorBlock","onClick","portionBlock","filter","el","p","styleForPage","pageNumber","pageNumberActive","User","us","onUnFollowHandler","onFollowHandler","followingInProgress","user","userIconBlock","photo","src","photos","small","userPhoto","alt","followed","disabled","some","userDescriptionBlock","userDescriptionInfo","status","updateObjectInArray","items","itemId","objPropName","newObjProps","u","ActionsTypes","initialState","users","totalUsersCount","isFetching","instance","axios","create","withCredentials","baseURL","headers","usersAPI","get","resp","data","profileAPI","userId","put","img","formData","FormData","append","authAPI","email","password","rememberMe","captcha","post","delete","securityAPI","followAC","FOLLOW","unFollowAC","UNFOLLOW","setUsersAC","SET_USERS","setCurrentPageAC","SET_CURRENT_PAGE","setIsFetchingAC","SET_IS_FETCHING","Users","usersPage","useCallback","a","setUsers","follow","unFollow","usersStyle","container","usersBlock","Preloader","imgLoad","loading","UsersContainer","useEffect","page","usersCount","totalCount","SET_USERS_COUNT","getUsers","setUserStatusAC","getUserProfile","profile","saveProfileDataTC","getState","resultCode","stopSubmit","_error","Promise","reject","ProfileStatus","profilePage","curStatus","setCurStatus","editMode","setEditMode","deActivateEditMode","resulCode","changeUserStatusTC","onKeyPress","e","charCode","onChange","currentTarget","autoFocus","onBlur","editableInput","onDoubleClick","editableSpan","ProfileData","isOwner","activeEditMode","description","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","ProfileFormWithFormik","htmlType","ProfileInfo","large","console","log","span","ava","target","files","length","Post","item","likesCount","MyPosts","posts","head","text","actions","width","resize","marginBottom","posts__item","withRouter","currentUserId","match","params","history","getUserStatus","setUserDataAC","login","getAuth","getCaptcha","captchaUrl","url","Login","pass","setLogin","form","rememberBlock","initialized","initializeApp","dispatchResult","all","SET_INITIALIZED","Header","Layout","WithHeaderRout","styleForCol","display","justifyContent","alignItems","logo","xs","Content","Sider","App","appPage","catchAllUnhandledErrors","reason","alert","window","addEventListener","removeEventListener","margin","padding","mode","defaultSelectedKeys","height","borderRight","Item","exact","background","minHeight","render","DialogsContainer","authReducer","reducers","combineReducers","newPost","Date","getTime","newMessage","FOLLOWING_IN_PROGRESS","isLoading","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.fbcb994e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages__item\":\"MessageItem_messages__item__1jEjC\",\"ava\":\"MessageItem_ava__2TnzV\",\"name\":\"MessageItem_name__1KLyk\",\"message\":\"MessageItem_message__1tqb-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__8f4w-\",\"posts__item\":\"MyPosts_posts__item__g4DML\",\"head\":\"MyPosts_head__3DANC\",\"button\":\"MyPosts_button__36rP7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Header_logo__3zA2i\",\"userPhoto\":\"Header_userPhoto__3iuyi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"DialogItem_ava__1acBe\",\"dialog\":\"DialogItem_dialog__2zJqv\",\"active\":\"DialogItem_active__1cWe0\",\"span\":\"DialogItem_span__31oAt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__2UIPF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__HzeD4\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;","import React, {ComponentType} from 'react';\r\nimport {Redirect} from 'react-router';\r\nimport {RootStoreType} from '../Redux/redux-store';\r\nimport {connect} from 'react-redux';\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nlet mapStateToPropsForRedirect = (state: RootStoreType): MapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nfunction AuthRedirect<T>(Component: ComponentType<T>) {\r\n    let RedirectComponent = ({isAuth, ...restProps}: MapStateToPropsType) => {\r\n        if (!isAuth) return <Redirect to={'/login'}/>\r\n\r\n        return <Component {...restProps as T} />\r\n    }\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}\r\n\r\nexport default AuthRedirect;","import {\r\n    FollowACType,\r\n    setCurrentPageACType, setFollowingACType,\r\n    setIsFetchingACType,\r\n    setUsersACType,\r\n    setUsersCountACType,\r\n    unFollowACType\r\n} from './users-actions';\r\nimport {updateObjectInArray} from '../../common/helpers';\r\n\r\nexport enum ActionTypes {\r\n    SET_IS_FETCHING = 'SET_IS_FETCHING',\r\n    SET_USERS_COUNT = 'SET_USERS_COUNT',\r\n    SET_CURRENT_PAGE = 'SET_CURRENT_PAGE',\r\n    SET_USERS = 'SET_USERS',\r\n    UNFOLLOW = 'UNFOLLOW',\r\n    FOLLOW = 'FOLLOW',\r\n    FOLLOWING_IN_PROGRESS = 'FOLLOWING_IN_PROGRESS',\r\n}\r\n\r\ntype ActionType = FollowACType | unFollowACType | setUsersACType |\r\n    setCurrentPageACType | setUsersCountACType | setIsFetchingACType |\r\n    setFollowingACType\r\nexport type UsersType = {\r\n    id: number\r\n    name: string\r\n    followed: boolean\r\n    status: null\r\n    uniqueUrlName: null\r\n    photos: {\r\n        small: null\r\n        large: null\r\n    }\r\n}\r\nexport type UsersReducerType = {\r\n    users: UsersType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: [] | number[]\r\n}\r\n\r\nlet initialState: UsersReducerType = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 23,\r\n    isFetching: true,\r\n    currentPage: 1,\r\n    followingInProgress: []\r\n}\r\n\r\nexport const usersReducer = (state:UsersReducerType = initialState, action: ActionType): UsersReducerType => {\r\n    switch (action.type) {\r\n        case ActionTypes.FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n            }\r\n        case ActionTypes.UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n            }\r\n        case ActionTypes.SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case ActionTypes.SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case ActionTypes.SET_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.usersCount\r\n            }\r\n        }\r\n        case ActionTypes.SET_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case ActionTypes.FOLLOWING_IN_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress:\r\n                    action.isLoading\r\n                        ? [...state.followingInProgress, action.userId]\r\n                        : state.followingInProgress.filter(el => el !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import React from 'react';\r\nimport s from './DialogItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {DialogsType} from '../../../Redux/dialogs-page/dialogs-reducer';\r\n\r\nconst DialogItem = (props: DialogsType) => {\r\n    let path = '/dialogs/' + props.id\r\n    return (\r\n            <NavLink to={ path } activeClassName={s.active} >\r\n                <div className={s.dialog}>\r\n                    <span>{ props.name }</span>\r\n                </div>\r\n            </NavLink>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './MessageItem.module.css';\r\nimport {MessagesType} from '../../../Redux/dialogs-page/dialogs-reducer';\r\n\r\nconst MessageItem = (props: MessagesType) => {\r\n    return <li className={s.messages__item}>\r\n        <span className={s.name}>{props.id}</span>\r\n        <span className={s.message}>{props.message}</span>\r\n    </li>\r\n}\r\n\r\nexport default MessageItem;","import React from 'react';\r\nimport {FieldHookConfig, useField} from 'formik';\r\nimport {Checkbox, Input} from 'antd';\r\n\r\nconst { TextArea } = Input;\r\n\r\ntype UseFormikPropsType = {label?: string} & FieldHookConfig<string>\r\ntype MyCheckboxPropsType = FieldHookConfig<string>\r\n\r\nexport const InputUse: React.FC<UseFormikPropsType> = ({ label, ...props }) => {\r\n    const [field, meta] = useField(props);\r\n    return (\r\n        <>\r\n            {label && <label htmlFor={props.id || props.name}>{label}</label>}\r\n            <Input style={props.style} {...field} placeholder={props.placeholder} type={props.type} />\r\n            {meta.touched && meta.error ? (\r\n                <div className=\"error\">{meta.error}</div>\r\n            ) : null}\r\n        </>\r\n    );\r\n};\r\n\r\nexport const TextareaUse: React.FC<UseFormikPropsType> = ({ label, ...props }) => {\r\n    const [field, meta] = useField(props);\r\n    return (\r\n        <>\r\n            {label && <label htmlFor={props.id || props.name}>{label}</label>}\r\n            <TextArea style={props.style} {...field} placeholder={props.placeholder} />\r\n            {meta.touched && meta.error ? (\r\n                <div className=\"error\">{meta.error}</div>\r\n            ) : null}\r\n        </>\r\n    );\r\n};\r\n\r\nexport const MyCheckbox = ({ children, ...props }: MyCheckboxPropsType) => {\r\n    const [field, meta] = useField({ ...props, type: 'checkbox' });\r\n    return (\r\n        <>\r\n            {children}\r\n            <Checkbox  checked={field.checked} {...field} />\r\n            {meta.touched && meta.error ? (\r\n                <div className=\"error\">{meta.error}</div>\r\n            ) : null}\r\n        </>\r\n    );\r\n};","import AuthRedirect from '../../HOC/AuthRedirect';\r\nimport {compose} from 'redux';\r\nimport React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport MessageItem from './MessageItem/MessageItem';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {RootStoreType} from '../../Redux/redux-store';\r\nimport {DialogsReducerType} from '../../Redux/dialogs-page/dialogs-reducer';\r\nimport {addMessageAC} from '../../Redux/dialogs-page/dialogs-actions';\r\nimport * as Yup from 'yup';\r\nimport {InputUse} from '../common/formsControls/FormsControls';\r\nimport {Formik} from 'formik';\r\n\r\n\r\nconst Dialogs = React.memo(() =>  {\r\n    const dispatch = useDispatch()\r\n    const {dialogs, messages} = useSelector<RootStoreType, DialogsReducerType>(state => state.dialogsPage)\r\n    const addMessage = (value: string) => {\r\n        dispatch(addMessageAC(value))\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogs__items}>\r\n                { dialogs.map( d => <DialogItem key={d.id} name={d.name} id={d.id} /> ) }\r\n            </div>\r\n            <div className={s.messages}>\r\n                { messages.map( m => <MessageItem key={m.id} id={m.id} message={m.message} /> ) }\r\n                <Formik\r\n                    initialValues={{ messageText: '' }}\r\n                    validationSchema= {Yup.object({\r\n                        messageText: Yup.string().max(100, 'Must be 100 characters or less').required('Required'),\r\n                    })}\r\n                    onSubmit={ (values, action) => {\r\n                        addMessage(values.messageText)\r\n                        action.resetForm()\r\n                    }}>\r\n                    {formik => (\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <InputUse className={s.input} name='messageText' id='messageText' placeholder='Enter your message' />\r\n                            <button className={s.butt} type='submit'>Submit</button>\r\n                        </form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default compose<React.ComponentType>(\r\n    AuthRedirect\r\n)(Dialogs)","export type addMessageACType = {\r\n    type: \"ADD-MESSAGE\"\r\n    newText: string\r\n}\r\n\r\nexport const addMessageAC = (newText: string): addMessageACType => ( { type: \"ADD-MESSAGE\", newText } )","import React, {useState} from 'react';\r\nimport s from './paginator.module.scss'\r\n\r\ntype PaginatorPropsType = {\r\n    onChangePage: (currentPage: number) => void\r\n    currentPage: number\r\n    pageSize: number\r\n    totalItemsCount: number\r\n    portionSize?: number\r\n}\r\n\r\nexport const Paginator = React.memo(({pageSize, totalItemsCount, onChangePage, currentPage, portionSize = 10}: PaginatorPropsType) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    const [portionNumber, setPortionNumber] = useState(1)\r\n\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n\r\n\r\n    return (\r\n        <div className={s.paginatorBlock}>\r\n            { portionNumber > 1 && <button onClick={() => setPortionNumber(portionNumber - 1)}>Prev</button> }\r\n            <div className={s.portionBlock}>\r\n                {\r\n                    pages\r\n                    .filter(el => {\r\n                        return el >= leftPortionPageNumber && el <= rightPortionPageNumber\r\n                    })\r\n                    .map(p => {\r\n                        const styleForPage = `${s.pageNumber} ${currentPage === p ? s.pageNumberActive : ''}`\r\n                        return <span\r\n                            key={p}\r\n                            onClick={() => onChangePage(p)}\r\n                            className={styleForPage}>{p}</span>\r\n                    })\r\n                }\r\n            </div>\r\n            { portionCount > portionNumber && <button onClick={() => setPortionNumber(portionNumber + 1)}>Next</button> }\r\n        </div>\r\n    )\r\n})","export default __webpack_public_path__ + \"static/media/user.81251c2b.png\";","import React from 'react';\r\nimport s from './Users.module.scss';\r\nimport {NavLink} from 'react-router-dom';\r\nimport userPhoto from '../../assets/img/user.png';\r\nimport {UsersType} from '../../Redux/users-page/users-reducer';\r\n\r\n\r\ntype UserPropsType = {\r\n    us: UsersType\r\n    onFollowHandler: () => void\r\n    onUnFollowHandler: () => void\r\n    followingInProgress: [] | number[]\r\n}\r\n\r\nconst User = (props: UserPropsType) => {\r\n    const {us, onUnFollowHandler, onFollowHandler, followingInProgress} = props\r\n    return (\r\n        <div className={s.user} key={us.id}>\r\n            <div className={s.userIconBlock}>\r\n                <NavLink to={`/profile/${us.id}`}>\r\n                    <img\r\n                        className={s.photo}\r\n                        src={us.photos.small! !== null ? us.photos.small! : userPhoto} alt=\"dsg\"/>\r\n                </NavLink>\r\n                {us.followed\r\n                    ? <button\r\n                        disabled={followingInProgress.some(el => el === us.id)}\r\n                        onClick={onUnFollowHandler}>Unfollow</button>\r\n                    : <button\r\n                        disabled={followingInProgress.some(el => el === us.id)}\r\n                        onClick={onFollowHandler}>Follow</button>}\r\n            </div>\r\n            <div className={s.userDescriptionBlock}>\r\n                <div className={s.userDescriptionInfo}>\r\n                    <span>{us.name}</span>\r\n                    <span>{us.status}</span>\r\n                </div>\r\n            </div>\r\n        </div>)\r\n\r\n};\r\n\r\nexport default User;","export const UpdateObjectInArrayType = {\r\n\r\n}\r\n\r\nexport const updateObjectInArray = (items: any[], itemId: number, objPropName: string, newObjProps: any) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u\r\n    })\r\n}","import {getAuth} from './auth-page/auth-actions';\r\n\r\nenum ActionsTypes {\r\n    SET_INITIALIZED = 'SET_INITIALIZED'\r\n}\r\n\r\nexport type AppReducerType = {\r\n    initialized: boolean\r\n}\r\n\r\nlet initialState: AppReducerType = {\r\n    initialized: false\r\n}\r\n\r\nexport const appReducer = (state:AppReducerType = initialState, action: any): AppReducerType => {\r\n    switch (action.type) {\r\n        case ActionsTypes.SET_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setInitializedAC = () => ({\r\n    type: ActionsTypes.SET_INITIALIZED\r\n})\r\n\r\nexport const initializeApp = () => (dispatch: any) => {\r\n    let dispatchResult = dispatch(getAuth())\r\n    Promise.all([dispatchResult]).then(() => {\r\n        dispatch(setInitializedAC())\r\n    })\r\n}","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '0c7f7a4d-ffbe-4143-a04f-3a08c1c80984'\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(pageSize: number, currentPage: number) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then( resp => resp.data )\r\n    },\r\n    changePage(currentPage: number, pageSize: number) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then( resp => resp.data )\r\n    },\r\n    follow(userId: number) {\r\n        return instance.post(`follow/${userId}`)\r\n            .then( resp => resp.data)\r\n    },\r\n    unFollow(userId: number) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then( resp => resp.data)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUser(userId: number) {\r\n        return instance.get(`profile/` + userId)\r\n            .then(resp => resp)\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get(`profile/status/${userId}`)\r\n            .then( (resp) => resp )\r\n    },\r\n    changeStatus(status: string) {\r\n        return instance.put(`profile/status`, {status: status})\r\n    },\r\n    savePhoto(img: File) {\r\n        let formData = new FormData()\r\n        formData.append('image', img)\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    saveData(data: any) {\r\n        return instance.put('profile', data)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    getAuth() {\r\n        return instance.get(`auth/me`)\r\n            .then(resp => resp.data)\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean = false, captcha: string | null = null) {\r\n        return instance.post('auth/login', {email, password, rememberMe, captcha})\r\n            .then(resp => resp.data)\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login')\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`)\r\n            .then(resp => resp)\r\n    }\r\n}","import {ActionTypes, UsersType} from './users-reducer';\r\nimport {usersAPI} from '../../api/api';\r\nimport {Dispatch} from 'redux';\r\n\r\n// TYPES\r\nexport type FollowACType = {\r\n    type: ActionTypes.FOLLOW\r\n    userId: number\r\n}\r\nexport type unFollowACType = {\r\n    type: ActionTypes.UNFOLLOW\r\n    userId: number\r\n}\r\nexport type setUsersACType = {\r\n    type: ActionTypes.SET_USERS\r\n    users: UsersType[]\r\n}\r\nexport type setCurrentPageACType = {\r\n    type: ActionTypes.SET_CURRENT_PAGE\r\n    currentPage: number\r\n}\r\nexport type setUsersCountACType = {\r\n    type: ActionTypes.SET_USERS_COUNT\r\n    usersCount: number\r\n}\r\nexport type setIsFetchingACType = {\r\n    type: ActionTypes.SET_IS_FETCHING\r\n    isFetching: boolean\r\n}\r\nexport type setFollowingACType = {\r\n    type: ActionTypes.FOLLOWING_IN_PROGRESS\r\n    isLoading: boolean\r\n    userId: number\r\n}\r\n\r\n// ACTION CREATORS\r\nexport const followAC = (userId: number): FollowACType => ({\r\n    type: ActionTypes.FOLLOW,\r\n    userId\r\n})\r\nexport const unFollowAC = (userId: number): unFollowACType => ({\r\n    type: ActionTypes.UNFOLLOW,\r\n    userId\r\n})\r\nexport const setUsersAC = (users: UsersType[]): setUsersACType => ({\r\n    type: ActionTypes.SET_USERS,\r\n    users: users\r\n})\r\nexport const setCurrentPageAC = (currentPage: number): setCurrentPageACType => ({\r\n    type: ActionTypes.SET_CURRENT_PAGE,\r\n    currentPage\r\n})\r\nexport const setUsersCountAC = (usersCount: number): setUsersCountACType => ({\r\n    type: ActionTypes.SET_USERS_COUNT,\r\n    usersCount\r\n})\r\nexport const setIsFetchingAC = (isFetching: boolean): setIsFetchingACType => ({\r\n    type: ActionTypes.SET_IS_FETCHING,\r\n    isFetching\r\n})\r\nexport const setIsFollowingAC = (userId: number, isLoading: boolean): setFollowingACType => ({\r\n    type: ActionTypes.FOLLOWING_IN_PROGRESS,\r\n    userId,\r\n    isLoading\r\n})\r\n\r\n// THUNK CREATORS\r\nexport const getUsers = (page: number, currentPage: number) => async (dispatch: Dispatch) => {\r\n    dispatch(setIsFetchingAC(true))\r\n    dispatch(setCurrentPageAC(page))\r\n    let resp = await usersAPI.getUsers(page, currentPage)\r\n    dispatch(setIsFetchingAC(false))\r\n    dispatch(setUsersAC(resp.items))\r\n    dispatch(setUsersCountAC(resp.totalCount))\r\n\r\n}\r\nexport const setUsers = (currentPage: number, pageSize: number) => async (dispatch: Dispatch) => {\r\n    dispatch(setCurrentPageAC(currentPage))\r\n    dispatch(setIsFetchingAC(true))\r\n    let resp = await usersAPI.changePage(currentPage, pageSize)\r\n    dispatch(setIsFetchingAC(false))\r\n    dispatch(setUsersAC(resp.items))\r\n\r\n}\r\nexport const follow = (id: number) => async (dispatch: Dispatch) => {\r\n    dispatch(setIsFollowingAC(id, true))\r\n    let resp = await usersAPI.follow(id)\r\n    if (resp.resultCode === 0) dispatch(followAC(id))\r\n    dispatch(setIsFollowingAC(id, false))\r\n}\r\nexport const unFollow = (id: number) => async (dispatch: Dispatch) => {\r\n    dispatch(setIsFollowingAC(id, true))\r\n    let resp = await usersAPI.unFollow(id)\r\n    if (resp.resultCode === 0) dispatch(unFollowAC(id))\r\n    dispatch(setIsFollowingAC(id, false))\r\n}","import React, {useCallback} from 'react';\r\nimport {Paginator} from '../common/paginator/paginator';\r\nimport User from './User';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {RootStoreType} from '../../Redux/redux-store';\r\nimport {UsersReducerType} from '../../Redux/users-page/users-reducer';\r\nimport {followAC, setUsers, unFollowAC} from '../../Redux/users-page/users-actions';\r\nimport container from './../../common/container.module.css'\r\nimport s from './Users.module.scss'\r\n\r\nconst Users: React.FC = React.memo(() => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {\r\n        currentPage,\r\n        totalUsersCount,\r\n        pageSize,\r\n        users,\r\n        followingInProgress\r\n    } = useSelector<RootStoreType, UsersReducerType>((state) => state.usersPage)\r\n    const onChangePage = useCallback((currentPage: number) => {\r\n        dispatch(setUsers(currentPage, pageSize))\r\n    }, [dispatch, pageSize])\r\n    const follow = useCallback((id: number) => dispatch(followAC(id)), [dispatch])\r\n    const unFollow = useCallback((id: number) => dispatch(unFollowAC(id)), [dispatch])\r\n\r\n    const usersStyle = `${container.container} ${s.container}`\r\n    return (\r\n        <div className={s.usersBlock}>\r\n            <div className={usersStyle}>\r\n                <Paginator\r\n                    pageSize={pageSize} totalItemsCount={totalUsersCount}\r\n                    currentPage={currentPage} onChangePage={onChangePage}/>\r\n\r\n                {\r\n                    users.map(us => {\r\n                        const onFollowHandler = () => follow(us.id)\r\n                        const onUnFollowHandler = () => unFollow(us.id)\r\n\r\n                        return <User\r\n                            key={`${us.id} ${us.name}`}\r\n                            followingInProgress={followingInProgress}\r\n                            onUnFollowHandler={onUnFollowHandler}\r\n                            onFollowHandler={onFollowHandler}\r\n                            us={us} />\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Users","export default __webpack_public_path__ + \"static/media/three-dots.f2671151.svg\";","import s from '../../Users/Users.module.scss';\r\nimport loading from '../../../assets/svg-loaders/three-dots.svg';\r\nimport React from 'react';\r\nexport let Preloader = () => {\r\n    return (\r\n        <div className={s.imgLoad}><img alt='loading' src={loading} /></div>\r\n    )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport {UsersReducerType} from '../../Redux/users-page/users-reducer';\r\nimport {RootStoreType} from '../../Redux/redux-store';\r\nimport Users from './Users.';\r\nimport {Preloader} from '../common/Preloader/Preloader';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {getUsers} from '../../Redux/users-page/users-actions';\r\n\r\nexport const UsersContainer = () => {\r\n    const {isFetching, pageSize, currentPage} = useSelector<RootStoreType, UsersReducerType>((state) => state.usersPage)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getUsers(pageSize, currentPage))\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {isFetching ? <Preloader/> : null}\r\n            <Users />\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default UsersContainer","import {userProfileType} from './profile-reducer';\r\nimport {profileAPI} from '../../api/api';\r\nimport {Dispatch} from 'redux';\r\nimport {RootStoreType} from '../redux-store';\r\nimport {stopSubmit} from 'redux-form';\r\n\r\n// TYPES\r\nexport type addPostACType = {\r\n    type: 'ADD-POST'\r\n    newText: string\r\n}\r\nexport type setUserProfileACType = {\r\n    type: 'SET_USER_PROFILE'\r\n    profile: userProfileType\r\n}\r\nexport type setUserStatusACType = {\r\n    type: 'SET_USER_STATUS'\r\n    status: string\r\n}\r\nexport type removePostACType = {\r\n    type: 'REMOVE_POST'\r\n    id: number\r\n}\r\nexport type setPhotoACType = {\r\n    type: 'SET_PHOTO',\r\n    photo: any\r\n}\r\n\r\nexport type ProfileActionsType = addPostACType | setUserProfileACType\r\n    | setUserStatusACType | removePostACType | setPhotoACType\r\n\r\n// ACTION CREATORS\r\nexport const addPostAC = (newText: string): addPostACType => ({\r\n    type: 'ADD-POST', newText\r\n})\r\nexport const setUserProfileAC = (profile: userProfileType): setUserProfileACType => ({\r\n    type: 'SET_USER_PROFILE', profile\r\n})\r\nexport const setUserStatusAC = (status: string): setUserStatusACType => ({\r\n    type: 'SET_USER_STATUS', status\r\n})\r\nexport const removePostAC = (id: number): removePostACType => ({\r\n    type: 'REMOVE_POST', id\r\n})\r\nexport const setPhotoAC = (photo: {small: string, large: string}) => ({\r\n    type: 'SET_PHOTO', photo\r\n})\r\nexport const setProfileDataAC = (data: any) => ({\r\n    type: 'SET_PROFILE_DATA', data\r\n})\r\n\r\n// THUNK CREATORS\r\nexport const getUserProfile = (userId: number) => async (dispatch: Dispatch) => {\r\n    let {data} = await profileAPI.getUser(userId)\r\n    dispatch(setUserProfileAC(data))\r\n}\r\nexport const getUserStatus = (userId: number) => async (dispatch: Dispatch) => {\r\n    let {data} = await profileAPI.getStatus(userId)\r\n    dispatch(setUserStatusAC(data))\r\n}\r\nexport const changeUserStatusTC = (status: string) => async (dispatch: Dispatch) => {\r\n    try {\r\n        let {data} = await profileAPI.changeStatus(status)\r\n        if (data.resulCode === 0) {\r\n            dispatch(setUserStatusAC(status))\r\n        }\r\n    } catch (e) {\r\n\r\n    }\r\n}\r\nexport const savePhotoTC = (img: File) => async (dispatch: Dispatch) => {\r\n    let {data} = await profileAPI.savePhoto(img)\r\n    if (data.resultCode === 0) {\r\n        dispatch(setPhotoAC(data.data.photos))\r\n    }\r\n}\r\nexport const saveProfileDataTC = (profile: userProfileType) => async (dispatch: Dispatch<any>, getState: () => RootStoreType ) => {\r\n    const userId = getState().auth.userId\r\n    const {data} = await profileAPI.saveData(profile)\r\n    if (data.resultCode === 0) {\r\n        if (userId !== null) {\r\n            dispatch(getUserProfile(userId))\r\n        }\r\n    } else {\r\n        dispatch(stopSubmit('edit-profile', {_error: data.messages[0]}))\r\n        return Promise.reject(data.messages[0])\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/new-user.a785bc1b.png\";","import React, {ChangeEvent,KeyboardEvent,  useEffect, useState} from 'react';\r\nimport s from '../ProfileInfo.module.scss'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {RootStoreType} from '../../../../Redux/redux-store';\r\nimport {changeUserStatusTC} from '../../../../Redux/profile-page/profile-actions';\r\n\r\nexport const ProfileStatus = () => {\r\n    const dispatch = useDispatch()\r\n    const { status } = useSelector((state: RootStoreType) => state.profilePage)\r\n\r\n    const [curStatus, setCurStatus] = useState(status)\r\n    const [editMode, setEditMode] = useState<boolean>( false)\r\n\r\n    const activateEditMode = () => setEditMode(true)\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false)\r\n        dispatch(changeUserStatusTC(curStatus))\r\n    }\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        e.charCode === 13 && deActivateEditMode()\r\n    }\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setCurStatus(e.currentTarget.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setCurStatus(status)\r\n    }, [status])\r\n\r\n    return (\r\n        <>\r\n            {\r\n                editMode\r\n                    ? <input onKeyPress={ onKeyPressHandler } value={curStatus} onChange={ onStatusChange }\r\n                             autoFocus onBlur={ deActivateEditMode }\r\n                             className={s.editableInput} type=\"text\"/>\r\n                    : <span onDoubleClick={ activateEditMode }\r\n                            className={s.editableSpan}>{ curStatus || '-------'}</span>\r\n            }\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport p from '../ProfileInfo.module.scss';\r\nimport {userProfileType} from '../../../../Redux/profile-page/profile-reducer';\r\nimport {ProfileStatus} from './ProfileStatus';\r\nimport {Button} from 'antd';\r\n\r\ntype ProfileDataPropsType = {\r\n    activeEditMode: () => void\r\n    profile: userProfileType\r\n    isOwner: boolean\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, activeEditMode}: ProfileDataPropsType) => {\r\n    return (\r\n        <div className={p.description}>\r\n            <div className={p.name}>\r\n                <h2>{profile.fullName}</h2>\r\n                <ProfileStatus/>\r\n            </div>\r\n            { isOwner && <Button onClick={activeEditMode}>Edit</Button>}\r\n            <div><span>About me:</span> {profile.aboutMe}</div>\r\n            <div>\r\n                <div><span>looking for a job:</span> {profile.lookingForAJob ? 'yes' : 'no'}</div>\r\n                {\r\n                    profile.lookingForAJob &&\r\n                    <div><span>looking for a job:</span> {profile.lookingForAJobDescription}</div>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileData;","import React from 'react';\r\nimport {Formik} from 'formik';\r\nimport * as Yup from 'yup'\r\nimport {InputUse, MyCheckbox} from '../../../common/formsControls/FormsControls';\r\nimport {userProfileType} from '../../../../Redux/profile-page/profile-reducer';\r\nimport { Button } from 'antd';\r\n\r\ntype ProfileFormWithFormikType = {\r\n    profile: userProfileType\r\n    onSubmit: (formData: userProfileType) => void\r\n}\r\n\r\nconst ProfileFormWithFormik = ({onSubmit, profile}: ProfileFormWithFormikType) => {\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                fullName: '' || profile.fullName,\r\n                aboutMe: '' || profile.aboutMe,\r\n                lookingForAJobDescription: '' || profile.lookingForAJobDescription,\r\n                lookingForAJob: profile.lookingForAJob\r\n            }}\r\n            validationSchema= {Yup.object({\r\n                fullName: Yup.string().max(25, 'Must be 25 characters or less').required('Required'),\r\n                aboutMe: Yup.string().max(95, 'Must be 95 characters or less').required('Required'),\r\n                lookingForAJobDescription: Yup.string().max(85, 'Must be 85 characters or less').required('Required'),\r\n            })}\r\n            onSubmit={ (values) => {\r\n                onSubmit(values)\r\n            }}>\r\n            {formik => (\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <InputUse label='Full name: ' name='fullName' id='fullName' placeholder='Enter your name' />\r\n\r\n                    <InputUse label='About me: ' name='aboutMe' id='aboutMe' />\r\n\r\n                    <InputUse label='My professional skills: ' name='lookingForAJobDescription' id='lookingForAJobDescription' />\r\n\r\n                    <div>\r\n                        <MyCheckbox id='lookingForAJob' name='lookingForAJob' >looking for a job: </MyCheckbox>\r\n                    </div>\r\n\r\n                    <Button htmlType='submit'>Submit</Button>\r\n                </form>\r\n            )}\r\n        </Formik>\r\n\r\n    );\r\n};\r\n\r\nexport default ProfileFormWithFormik;","import React, {ChangeEvent, useState} from 'react';\r\nimport p from './ProfileInfo.module.scss';\r\nimport {userProfileType} from '../../../Redux/profile-page/profile-reducer';\r\nimport user from '../../../assets/img/new-user.png'\r\nimport ProfileData from './ProfileData/ProfileData';\r\nimport {useDispatch} from 'react-redux';\r\nimport {savePhotoTC, saveProfileDataTC} from '../../../Redux/profile-page/profile-actions';\r\nimport ProfileFormWithFormik from './ProfileForm/ProfileFormWithFormik';\r\nimport {Col, Row} from 'antd';\r\n\r\ntype ProfileInfoType = {\r\n    profile: userProfileType\r\n    isOwner: boolean\r\n}\r\n\r\nconst ProfileInfo = React.memo(({profile, isOwner}: ProfileInfoType) => {\r\n    const dispatch = useDispatch()\r\n    const [editMode, setEditMode] = useState(false)\r\n    const userPhoto = profile.photos!.large || user\r\n    const onChangePhoto = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files!.length) {\r\n            dispatch(savePhotoTC(e.target.files![0]))\r\n        }\r\n    }\r\n\r\n    const onSubmit = async (formData: userProfileType) => {\r\n        try {\r\n            let data = await dispatch(saveProfileDataTC(formData))\r\n            if (!data) {\r\n                setEditMode(false)\r\n            }\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col span={10}>\r\n                <img className={p.ava}\r\n                     src={userPhoto}\r\n                     alt=\"userPhoto\"\r\n                />\r\n                {isOwner && <input type={'file'} onChange={onChangePhoto}/>}\r\n            </Col>\r\n            <Col span={12}>\r\n                {\r\n                    editMode\r\n                        ? <ProfileFormWithFormik profile={profile} onSubmit={onSubmit}/>\r\n                        : <ProfileData\r\n                            isOwner={isOwner}\r\n                            activeEditMode={() => setEditMode(true)}\r\n                            profile={profile}/>\r\n                }\r\n            </Col>\r\n        </Row>\r\n    );\r\n})\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport p from './Post.module.css';\r\nimport {PostsType} from '../MyPosts';\r\n\r\nconst Post = (props: PostsType) => {\r\n    return (\r\n        <div key={props.id} className={p.item}>\r\n            <img src=\"https://northlands.ru/data/media/14/50930ef9c06c1b4f1a3619eaf0b56a96.jpg\" alt='' />\r\n            {props.message}\r\n            <div>\r\n                {props.likesCount} likes\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport Post from './Post/Post';\r\nimport s from './MyPosts.module.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {addPostAC} from '../../../Redux/profile-page/profile-actions';\r\nimport {RootStoreType} from '../../../Redux/redux-store';\r\nimport * as Yup from 'yup';\r\nimport {InputUse, TextareaUse} from '../../common/formsControls/FormsControls';\r\nimport {Formik} from 'formik';\r\nimport {Button} from 'antd';\r\n\r\nexport type PostsType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\nconst MyPosts: React.FC = React.memo((props ) => {\r\n    const dispatch = useDispatch()\r\n    const { posts } = useSelector((state: RootStoreType) => state.profilePage)\r\n\r\n    const addPost = (value: string) => {\r\n        dispatch(addPostAC(value))\r\n    }\r\n\r\n    return (\r\n        <div className={s.posts}>\r\n            <h2 className={s.head}>My post</h2>\r\n            <Formik\r\n                initialValues={{text: ''}}\r\n                validationSchema= {Yup.object({\r\n                    text: Yup.string().max(195, 'Must be 195 characters or less').required('Required'),\r\n                })}\r\n                onSubmit={(values, actions) => {\r\n                    addPost(values.text)\r\n                    actions.resetForm()\r\n                }}>\r\n                {formik => (\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <TextareaUse style={{width: '400px', resize: 'none', marginBottom: 10}} name='text' id='text' placeholder='What is new?' />\r\n                        <Button htmlType='submit'>Send</Button>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n\r\n            <div className={s.posts__item}>\r\n                {\r\n                    posts\r\n                        .map(p => {\r\n                        return <Post key={p.id} id={p.id} message={p.message} likesCount={p.likesCount}/>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default MyPosts;","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {getUserProfile, getUserStatus,} from '../../Redux/profile-page/profile-actions';\r\nimport {compose} from 'redux';\r\nimport {Preloader} from '../common/Preloader/Preloader';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport {RootStoreType} from '../../Redux/redux-store';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport AuthRedirect from '../../HOC/AuthRedirect';\r\nimport {Content} from 'antd/es/layout/layout';\r\n\r\nconst ProfileContainer = (props: any) => {\r\n    const dispatch = useDispatch()\r\n    const {profile} = useSelector((state: RootStoreType) => state.profilePage)\r\n    const {userId} = useSelector((state: RootStoreType) => state.auth)\r\n\r\n    useEffect(() => {\r\n        let currentUserId = props.match.params.userId\r\n        if (!currentUserId) {\r\n            currentUserId = userId\r\n            if (!currentUserId) {\r\n                props.history.push('/login')\r\n            }\r\n        }\r\n        dispatch(getUserProfile(currentUserId))\r\n        dispatch(getUserStatus(currentUserId))\r\n    }, [props.match.params.userId, props.history, userId, dispatch])\r\n\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <Content>\r\n            <ProfileInfo profile={profile} isOwner={!props.match.params.userId}/>\r\n            <MyPosts/>\r\n        </Content>\r\n    );\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    withRouter,\r\n    AuthRedirect\r\n)(ProfileContainer)","import {authAPI, profileAPI, securityAPI} from '../../api/api';\r\nimport {Dispatch} from 'redux';\r\nimport {stopSubmit} from 'redux-form';\r\n\r\n// TYPES\r\nexport type setUserDataACType = {\r\n    type: 'SET_USER_DATA',\r\n    data: any\r\n}\r\nexport type setUserPhotoACType = {\r\n    type: 'SET_USER_PHOTO',\r\n    photo: string\r\n}\r\nexport type setCaptchaACType = {\r\n    type: 'SET_CAPTCHA',\r\n    captchaUrl: string\r\n}\r\n\r\n// ACTION CREATORS\r\nexport const setUserDataAC = (userId: number | null, email: string | null, login: string | null, isAuth: boolean): setUserDataACType => ({\r\n    type: 'SET_USER_DATA',\r\n    data: {userId, email, login, isAuth}\r\n})\r\nexport const setUserPhotoAC = (photo: string): setUserPhotoACType => ({\r\n    type: 'SET_USER_PHOTO',\r\n    photo\r\n})\r\nexport const setCaptchaAC = (captchaUrl: string): setCaptchaACType => ({\r\n    type: 'SET_CAPTCHA',\r\n    captchaUrl\r\n})\r\n\r\n// THUNK CREATORS\r\nexport const getAuth = () => async (dispatch: any) => {\r\n    let resp = await authAPI.getAuth()\r\n    if (resp.resultCode === 0) {\r\n        let {id, login, email} = resp.data\r\n        dispatch(setUserDataAC(id, email, login, true))\r\n        let {data} = await profileAPI.getUser(id)\r\n        dispatch(setUserPhotoAC(data.photos.small))\r\n    }\r\n\r\n}\r\nexport const setLogin = (email: string, pass: string, rememberMe: boolean, captcha?: string) => async (dispatch: any) => {\r\n    let resp = await authAPI.login(email, pass, rememberMe, captcha)\r\n    if (resp.resultCode === 0) {\r\n        dispatch(getAuth())\r\n    } else {\r\n        if (resp.resultCode === 10) {\r\n            dispatch(getCaptcha())\r\n        }\r\n        const message = resp.messages.length > 0 ? resp.messages[0] : 'Some error'\r\n        dispatch(stopSubmit('login', {_error: message}))\r\n    }\r\n}\r\nexport const setLogout = () => async (dispatch: Dispatch) => {\r\n    const resp = await authAPI.logout()\r\n    if (resp.data.resultCode === 0) {\r\n        dispatch(setUserDataAC(null, null, null, false))\r\n    }\r\n}\r\nexport const getCaptcha = () => async (dispatch: any) => {\r\n    const {data} = await securityAPI.getCaptchaUrl()\r\n    dispatch(setCaptchaAC(data.url))\r\n}","import React from 'react';\r\nimport s from './Login.module.scss'\r\nimport {InputUse, MyCheckbox} from '../common/formsControls/FormsControls';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {setLogin} from '../../Redux/auth-page/auth-actions';\r\nimport {Redirect} from 'react-router';\r\nimport {RootStoreType} from '../../Redux/redux-store';\r\nimport {authReducerType} from '../../Redux/auth-page/auth-reducer';\r\nimport {Formik} from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\ntype LoginDataType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean\r\n    captcha: string\r\n}\r\n\r\nconst Login = () => {\r\n    const dispatch = useDispatch()\r\n    const {isAuth, captcha} = useSelector<RootStoreType, authReducerType>(state => state.auth)\r\n\r\n    const onSubmit = (formData: LoginDataType) => {\r\n        dispatch(setLogin(formData.email, formData.password, formData.rememberMe, formData.captcha))\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to='/profile' />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{\r\n                    email: '',\r\n                    password: '',\r\n                    rememberMe: false,\r\n                    captcha: ''\r\n                }}\r\n                validationSchema= {Yup.object({\r\n                    email: Yup.string().max(25, 'Must be 25 characters or less').required('Required').email(),\r\n                    password: Yup.string().max(25, 'Must be 95 characters or less').required('Required')\r\n                })}\r\n                onSubmit={ (values) => {\r\n                    onSubmit(values)\r\n                }}>\r\n                {formik => (\r\n                    <form className={s.form} onSubmit={formik.handleSubmit}>\r\n                        <InputUse className={s.input} label='Email: ' name='email' id='email' placeholder='Enter your email' />\r\n                        <InputUse className={s.input} label='Password: ' type='password' name='password' id='password' />\r\n                        <div className={s.rememberBlock}>\r\n                            <span>Remember me</span>\r\n                            <MyCheckbox id='rememberMe' name='rememberMe' />\r\n                        </div>\r\n\r\n                        {captcha && <img src={captcha} alt=\"captcha\"/>}\r\n                        {\r\n                            captcha && <InputUse className={s.input} label='Enter symbols from image: '\r\n                                                 name='captcha' id='captcha' />}\r\n\r\n                        <button type='submit'>Login</button>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import {Link, withRouter} from 'react-router-dom';\r\nimport React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {RootStoreType} from '../../Redux/redux-store';\r\nimport {setLogout} from '../../Redux/auth-page/auth-actions';\r\nimport s from './Header.module.scss';\r\nimport userPhoto from '../../assets/img/user.png';\r\nimport {authReducerType} from '../../Redux/auth-page/auth-reducer';\r\nimport {Button, Col, Layout, Row} from 'antd';\r\n\r\nconst {Header} = Layout;\r\n\r\nconst HeaderContainer: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {isAuth, photo} = useSelector<RootStoreType, authReducerType>(state => state.auth)\r\n\r\n    const onSetLogout = () => {\r\n        dispatch(setLogout())\r\n    }\r\n\r\n    const styleForCol = {display: 'flex', justifyContent: 'center', alignItems: 'center'}\r\n\r\n    return (\r\n        <Header className=\"header\">\r\n            <Row>\r\n                <Col span={20}>\r\n                    <div style={styleForCol} className={s.logo}>\r\n                        <Link to=\"/profile\" className={s.a}>\r\n                            <img\r\n                                src=\"https://www.amic.ru/project/all/architecture-barnaul/images/tild3630-6134-4437-b138-623638326363__medicallogopng32.jpeg\"\r\n                                alt=\"logo\"/>\r\n                        </Link>\r\n                    </div>\r\n                </Col>\r\n\r\n                {isAuth\r\n                    ?\r\n                    <>\r\n                        <Col style={styleForCol} xs={2}>\r\n                            <img className={s.userPhoto} src={photo !== null ? photo : userPhoto}\r\n                                 alt=\"userPhoto\"/>\r\n                        </Col>\r\n                        <Col style={styleForCol} span={2}>\r\n                            <Button onClick={onSetLogout}>Log out</Button>\r\n                        </Col>\r\n                    </>\r\n                    :\r\n                    <Col style={styleForCol} span={4}>\r\n                        <Button>\r\n                            <Link to={'/login'}>Login</Link>\r\n                        </Button>\r\n                    </Col>\r\n                }\r\n            </Row>\r\n        </Header>\r\n\r\n    )\r\n}\r\n\r\nlet WithHeaderRout = withRouter(HeaderContainer)\r\n\r\nexport default WithHeaderRout;","import React, {useEffect} from 'react';\r\nimport './App.scss';\r\nimport Settings from './components/Settings/Settings'\r\nimport {NavLink, Route} from 'react-router-dom';\r\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport Login from './components/Login/Login';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {initializeApp} from './Redux/app-reducer';\r\nimport {RootStoreType} from './Redux/redux-store';\r\nimport {Preloader} from './components/common/Preloader/Preloader';\r\nimport {Redirect} from 'react-router';\r\nimport {Breadcrumb, Layout, Menu} from 'antd';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\n\r\nconst {Content, Sider} = Layout;\r\n\r\nconst App = () => {\r\n    const dispatch = useDispatch()\r\n    const initialized = useSelector<RootStoreType>(state => state.appPage.initialized)\r\n    const catchAllUnhandledErrors = (e: PromiseRejectionEvent) => {\r\n        e.reason ? alert(e.reason) : alert('some error occurred')\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(initializeApp())\r\n        window.addEventListener('unhandledrejection', catchAllUnhandledErrors)\r\n\r\n        return () => {\r\n            window.removeEventListener('unhandledrejection', catchAllUnhandledErrors)\r\n        }\r\n    }, [dispatch])\r\n\r\n    if (!initialized) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <Layout>\r\n            <HeaderContainer />\r\n            <Content style={{ width: 1200, margin: '0 auto' }}>\r\n                <Breadcrumb style={{margin: '16px 0'}}>\r\n                </Breadcrumb>\r\n                <Layout style={{padding: '0 24px 24px'}}>\r\n                    <Sider  width={200} className=\"site-layout-background\">\r\n                        <Menu\r\n                            mode=\"inline\"\r\n                            defaultSelectedKeys={['1']}\r\n                            style={{height: '100%', borderRight: 0}}\r\n                        >\r\n                            <Menu.Item key=\"1\">\r\n                                <NavLink exact to='/profile'>Profile</NavLink>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"2\">\r\n                                <NavLink exact to='/dialogs'>Messages</NavLink>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"3\">\r\n                                <NavLink exact to='/users'>Users</NavLink>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"4\">\r\n                                <NavLink exact to='/settings'>Settings</NavLink>\r\n                            </Menu.Item>\r\n                        </Menu>\r\n                    </Sider>\r\n                    <Content style={{\r\n                            background: '#fff', padding: 24, margin: 0, minHeight: 280,\r\n                        }}>\r\n                        <Route exact path=\"/\" render={() => <Redirect to=\"/profile\"/>}/>\r\n                        <Route path=\"/login\" render={() => <Login/>}/>\r\n                        <Route path=\"/profile/:userId?\" render={() => <ProfileContainer/>}/>\r\n                        <Route path=\"/dialogs\" render={() => <DialogsContainer/>}/>\r\n                        <Route path=\"/users\" render={() => <UsersContainer/>}/>\r\n                        <Route path=\"/settings\" render={() => <Settings/>}/>\r\n                    </Content>\r\n                </Layout>\r\n            </Content>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default App;","import { ProfileActionsType } from './profile-actions';\r\nimport {PostsType} from '../../components/Profile/MyPosts/MyPosts';\r\n\r\nexport type userProfileType = {\r\n    aboutMe: string\r\n    contacts?: {\r\n        'facebook': string\r\n        'website': null,\r\n        'vk': string\r\n        'twitter': string\r\n        'instagram': string\r\n        'youtube': null\r\n        'github': string\r\n        'mainLink': null\r\n    },\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    userId?: number\r\n    photos?: {\r\n        small: string\r\n        large: string\r\n    }\r\n}\r\nexport type ProfilePageType = {\r\n    posts: Array<PostsType>\r\n    profile: userProfileType | null\r\n    status: string\r\n}\r\n\r\nlet initialState: ProfilePageType = {\r\n    posts: [{id: 1, message: 'Hi, how are you?', likesCount: 16},\r\n        {id: 2, message: 'I\\'m a programmer', likesCount: 56},\r\n        {id: 3, message: 'It\\'s my first post', likesCount: 3},],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nexport const profileReducer = (state = initialState, action: ProfileActionsType): ProfilePageType => {\r\n    switch (action.type) {\r\n        case 'ADD-POST':\r\n            let newPost = {id: new Date().getTime(), message: action.newText, likesCount: 0}\r\n            return {\r\n                ...state,\r\n                posts: [newPost, ...state.posts]\r\n            }\r\n        case 'SET_USER_PROFILE': {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case 'SET_USER_STATUS': {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case 'REMOVE_POST': {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(el => el.id !== action.id)\r\n            }\r\n        }\r\n        case 'SET_PHOTO': {\r\n            debugger\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile!, photos: action.photo}\r\n            }\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}","import {addMessageACType} from './dialogs-actions';\r\n\r\nexport type MessagesType = {\r\n    id: number\r\n    message: string\r\n}\r\nexport type DialogsType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nexport type DialogsReducerType = {\r\n    dialogs: Array<DialogsType>\r\n    messages: Array<MessagesType>\r\n}\r\ntype ActionType = addMessageACType\r\n\r\nconst initialState: DialogsReducerType = {\r\n    dialogs: [\r\n        {name: 'Dimych', id: 1},\r\n        {name: 'Andrey', id: 2},\r\n        {name: 'Galina', id: 3},\r\n        {name: 'Victor', id: 4},\r\n        {name: 'Maxim', id: 5},\r\n        {name: 'Sveta', id: 6},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hello'},\r\n        {id: 2, message: 'Hi'},\r\n        {id: 3, message: 'You are right?'},\r\n        {id: 4, message: 'Yes, i am!'},\r\n    ],\r\n}\r\n\r\nexport const dialogsReducer = (state: DialogsReducerType = initialState, action: ActionType): DialogsReducerType => {\r\n    switch (action.type) {\r\n        case 'ADD-MESSAGE': {\r\n            let newMessage = {id: new Date().getTime(), message: action.newText}\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage],\r\n            }\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\n","import {setCaptchaACType, setUserDataACType, setUserPhotoACType} from './auth-actions';\r\n\r\ntype ActionType = setUserDataACType | setUserPhotoACType | setCaptchaACType\r\nexport type authReducerType = {\r\n    userId: number | null,\r\n    email: string | null,\r\n    login: string | null,\r\n    isAuth: boolean,\r\n    photo: string | null,\r\n    captcha: string | null\r\n}\r\n\r\nconst initialState: authReducerType = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    photo: null,\r\n    captcha: null\r\n}\r\n\r\nconst authReducer = (state = initialState, action: ActionType): authReducerType => {\r\n    switch (action.type) {\r\n        case 'SET_USER_DATA': {\r\n            return { ...state, ...action.data }\r\n        }\r\n        case 'SET_USER_PHOTO': {\r\n            return { ...state, photo: action.photo }\r\n        }\r\n        case 'SET_CAPTCHA': {\r\n            return {...state, captcha: action.captchaUrl}\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n};\r\n\r\nexport default authReducer;","import {applyMiddleware, combineReducers, compose, createStore} from 'redux';\r\nimport {profileReducer} from \"./profile-page/profile-reducer\";\r\nimport {dialogsReducer} from \"./dialogs-page/dialogs-reducer\";\r\nimport {usersReducer} from \"./users-page/users-reducer\";\r\nimport authReducer from './auth-page/auth-reducer';\r\nimport thunk from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport {appReducer} from './app-reducer';\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    appPage: appReducer\r\n})\r\n\r\nconst composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport type RootStoreType = ReturnType<typeof reducers>\r\n\r\nexport let store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)))\r\n","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport ReactDOM from \"react-dom\";\nimport {HashRouter} from 'react-router-dom';\nimport App from \"./App\";\nimport {store} from \"./Redux/redux-store\";\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>\n    ,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersBlock\":\"Users_usersBlock__1quFL\",\"container\":\"Users_container__2hMdG\",\"user\":\"Users_user__3SRiF\",\"userIconBlock\":\"Users_userIconBlock__dnxVc\",\"photo\":\"Users_photo__DK-5r\",\"userDescriptionBlock\":\"Users_userDescriptionBlock__2Kw-9\",\"userDescriptionInfo\":\"Users_userDescriptionInfo__2aXCC\",\"imgLoad\":\"Users_imgLoad__140tO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"ProfileInfo_ava__2m2XW\",\"description\":\"ProfileInfo_description__1GqWT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__SBqCl\",\"dialogs__items\":\"Dialogs_dialogs__items__2b9Rw\",\"active\":\"Dialogs_active__3jVbT\",\"messages\":\"Dialogs_messages__1e_sA\",\"messages__item\":\"Dialogs_messages__item__3TGKE\",\"dialog\":\"Dialogs_dialog__3wV3b\",\"input\":\"Dialogs_input__3Aw_9\",\"text\":\"Dialogs_text__1nAwX\",\"butt\":\"Dialogs_butt__cEDsp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Login_form__3nFZO\",\"rememberBlock\":\"Login_rememberBlock__3rdcN\",\"input\":\"Login_input__3pt_O\",\"formSummaryError\":\"Login_formSummaryError__3k_-9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginatorBlock\":\"paginator_paginatorBlock__1FNaZ\",\"portionBlock\":\"paginator_portionBlock__eR6I3\",\"pageNumber\":\"paginator_pageNumber__1fpUu\",\"pageNumberActive\":\"paginator_pageNumberActive__33D8a\"};"],"sourceRoot":""}